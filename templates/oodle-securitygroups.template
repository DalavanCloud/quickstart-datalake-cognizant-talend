{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create Oodle Security Groups",
    "Parameters": {
        "VpcId": {
            "Description": "VPC to which security groups belong",
            "Type": "AWS::EC2::VPC::Id"
        },
		"BastionSecurityGroupID": {
            "Description": "Bastion Server Security Group.",
            "Type": "String"
		},
        "DatabaseSecurityGroupID": {
            "Description": "Database Security Group.",
            "Type": "String"
        },
        "StudioSecurityGroupID": {
            "Description": "Talend Studio Security Group.",
            "Type": "String"
        },
        "TacSecurityGroupID": {
            "Description": "TAC Security Group.",
            "Type": "String"
        },
        "JobserverSecurityGroupID": {
            "Description": "Jobserver Security Group.",
            "Type": "String"
        },
        "DistantRunSecurityGroupID": {
            "Description": "DistantRun Security Group.",
            "Type": "String"
        },
        "NexusSecurityGroupID": {
            "Description": "Nexus Security Group.",
            "Type": "String"
        },
        "LogserverSecurityGroupID": {
            "Description": "Logserver Security Group.",
            "Type": "String"
        },
        "CommandlineSecurityGroupID": {
            "Description": "Commandline Security Group.",
            "Type": "String"
        },
        "GitSecurityGroupID": {
            "Description": "Git Security Group.",
            "Type": "String"
        }
    },
    "Mappings": {
    },
    "Conditions": {
        "DatabaseCondition": {
            "Fn::Not": [
                { "Fn::Equals": [ "", { "Ref": "DatabaseSecurityGroupID" } ] }
            ]
        },
        "StudioCondition": {
            "Fn::Not": [
                { "Fn::Equals": [ "", { "Ref": "StudioSecurityGroupID" } ] }
            ]
        },
        "TacCondition": {
            "Fn::Not": [
                { "Fn::Equals": [ "", { "Ref": "TacSecurityGroupID" } ] }
            ]
        },
        "JobserverCondition": {
            "Fn::Not": [
                { "Fn::Equals": [ "", { "Ref": "JobserverSecurityGroupID" } ] }
            ]
        },
        "DistantRunCondition": {
            "Fn::Not": [
                { "Fn::Equals": [ "", { "Ref": "DistantRunSecurityGroupID" } ] }
            ]
        },
        "NexusCondition": {
            "Fn::Not": [
                { "Fn::Equals": [ "", { "Ref": "NexusSecurityGroupID" } ] }
            ]
        },
        "LogserverCondition": {
            "Fn::Not": [
                { "Fn::Equals": [ "", { "Ref": "LogserverSecurityGroupID" } ] }
            ]
        },
        "CommandlineCondition": {
            "Fn::Not": [
                { "Fn::Equals": [ "", { "Ref": "CommandlineSecurityGroupID" } ] }
            ]
        },
        "GitCondition": {
            "Fn::Not": [
                { "Fn::Equals": [ "", { "Ref": "GitSecurityGroupID" } ] }
            ]
        }
    },
    "Resources": {
        "DatabaseIngressBastion": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "DatabaseCondition",
            "Properties": {
                "GroupId": { "Ref": "DatabaseSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "3306",
                "ToPort": "3306"
            }
        },
        "StudioIngressBastionSsh": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "StudioCondition",
            "Properties": {
                "GroupId": { "Ref": "StudioSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22"
            }
        },
        "TacIngressBastionSsh": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "TacCondition",
            "Properties": {
                "GroupId": { "Ref": "TacSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22"
            }
        },
        "TacIngressBastion": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "TacCondition",
            "Properties": {
                "GroupId": { "Ref": "TacSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "8080",
                "ToPort": "8080"
            }
        },
        "JobserverIngressBastionSsh": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "JobserverCondition",
            "Properties": {
                "GroupId": { "Ref": "JobserverSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22"
            }
        },
        "DistantRunIngressBastionSsh": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "DistantRunCondition",
            "Properties": {
                "GroupId": { "Ref": "DistantRunSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22"
            }
        },
        "NexusIngressBastionSsh": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "NexusCondition",
            "Properties": {
                "GroupId": { "Ref": "NexusSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22"
            }
        },
        "NexusIngressBastion": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "NexusCondition",
            "Properties": {
                "GroupId": { "Ref": "NexusSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "8081",
                "ToPort": "8081"
            }
        },
        "LogserverIngressBastionSsh": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "LogserverCondition",
            "Properties": {
                "GroupId": { "Ref": "LogserverSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22"
            }
        },
        "LogserverIngressBastionElastic": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "LogserverCondition",
            "Properties": {
                "GroupId": { "Ref": "LogserverSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "9200",
                "ToPort": "9200"
            }
        },
        "LogserverIngressBastionKibana": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "LogserverCondition",
            "Properties": {
                "GroupId": { "Ref": "LogserverSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "5601",
                "ToPort": "5601"
            }
        },
        "CommandlineIngressBastionSsh": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "CommandlineCondition",
            "Properties": {
                "GroupId": { "Ref": "CommandlineSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22"
            }
        },
        "CommandlineIngressBastionCmdShell": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "CommandlineCondition",
            "Properties": {
                "GroupId": { "Ref": "CommandlineSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "8002",
                "ToPort": "8002"
            }
        },
        "GitIngressBastionSsh": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "GitCondition",
            "Properties": {
                "GroupId": { "Ref": "GitSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22"
            }
        },
        "GitIngressBastionHttp": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "GitCondition",
            "Properties": {
                "GroupId": { "Ref": "GitSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80"
            }
        },
        "GitIngressBastionHttps": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Condition": "GitCondition",
            "Properties": {
                "GroupId": { "Ref": "GitSecurityGroupID" },
                "SourceSecurityGroupId": { "Ref": "BastionSecurityGroupID" },
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80"
            }
        }
    },
    "Outputs": {
    }
}
