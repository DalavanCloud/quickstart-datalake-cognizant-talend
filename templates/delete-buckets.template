{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation template to delete all data from Datalake buckets (qs-1nlkhq1oe)",

    "Parameters": {
        "DelBucket1": {
            "Description": "Bucketname 1",
            "Type": "String"
        },
        "DelBucket2": {
            "Description": "Bucketname 2",
            "Type": "String"
        },
        "DelBucket3": {
            "Description": "Bucketname 3",
            "Type": "String"
        }
    },
    
    "Conditions": {
    },
    
    "Resources": {

        "EmptyBuckets": {
            "Properties": {
                "TB1": {
                    "Ref": "DelBucket1"
                },
                "TB2": {
                    "Ref": "DelBucket2"
                },
				"TB3": {
                    "Ref": "DelBucket3"
                },
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "EmptyBucketsFunction",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CloudFormation::CustomResource"
        },

		"EmptyBucketsRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "OodleLambdaLogging"
                    },
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:ListBucket",
                                        "s3:DeleteObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
									
									
                                        {"Fn::Sub": "arn:aws:s3:::${DelBucket1}/*" },
										{"Fn::Sub": "arn:aws:s3:::${DelBucket2}/*" },
										{"Fn::Sub": "arn:aws:s3:::${DelBucket3}/*" }

                                    ]
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "ListDeleteDataLakeBuckets"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },

        "EmptyBucketsFunction": {
            "Properties": {
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "\n",
                            [
                                "import json",
                                "import cfnresponse",
                                "import boto3",
                                "from botocore.exceptions import ClientError",
                                "",
                                "s3 = boto3.resource('s3')",
                                "",
                                "def handler(event, context):",
                                "    bucket_1 = s3.Bucket(event['ResourceProperties']['TB1'])",
                                "    bucket_2 = s3.Bucket(event['ResourceProperties']['TB2'])",
                                "    bucket_3 = s3.Bucket(event['ResourceProperties']['TB3'])",
                                "    if event['RequestType'] == 'Delete':",
                                "        try:",
                                "            bucket_1.objects.all().delete()",
                                "            bucket_2.objects.all().delete()",
                                "            bucket_3.objects.all().delete()",
                                "            return cfnresponse.send(event, context, cfnresponse.SUCCESS, {})",
                                "        except ClientError as e:",
                                "            print(e)",
                                "            return cfnresponse.send(event, context, cfnresponse.FAILED, {})",
                                "    else:",
                                "        return cfnresponse.send(event, context, cfnresponse.SUCCESS, {})"
                            ]
                        ]
                    }
                },
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt" : [
                        "EmptyBucketsRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.6",
                "Timeout": 30
            },
            "Type": "AWS::Lambda::Function"
        }
        
    }
}